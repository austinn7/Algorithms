Find max in an array that is rotated at an unknown index.
left = 0; right = arraySize – 1.
while(left < right)
	middle = left + (right - left)/2
	if(array[left] < array[middle])   left = middle
	elseif(array[left] > array[middle])   right = middle – 1
	else   left += 1
return array[low]

The algorithm shown utilizes binary search to traverse through the array 
and does so in O(log(n)) time. To be specific, it does so in O(log2(n)) 
and is the most efficient way to find the largest element in the array.
